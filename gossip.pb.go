// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: gossip.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromId        string                 `protobuf:"bytes,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	Seq           uint64                 `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_gossip_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gossip_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_gossip_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetFromId() string {
	if x != nil {
		return x.FromId
	}
	return ""
}

func (x *PingRequest) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type PingReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	TsMs          int64                  `protobuf:"varint,2,opt,name=ts_ms,json=tsMs,proto3" json:"ts_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingReply) Reset() {
	*x = PingReply{}
	mi := &file_gossip_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReply) ProtoMessage() {}

func (x *PingReply) ProtoReflect() protoreflect.Message {
	mi := &file_gossip_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReply.ProtoReflect.Descriptor instead.
func (*PingReply) Descriptor() ([]byte, []int) {
	return file_gossip_proto_rawDescGZIP(), []int{1}
}

func (x *PingReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *PingReply) GetTsMs() int64 {
	if x != nil {
		return x.TsMs
	}
	return 0
}

type PingReqRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromId        string                 `protobuf:"bytes,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	TargetAddr    string                 `protobuf:"bytes,2,opt,name=target_addr,json=targetAddr,proto3" json:"target_addr,omitempty"` // dove provare il Ping indiretto
	Seq           uint64                 `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingReqRequest) Reset() {
	*x = PingReqRequest{}
	mi := &file_gossip_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingReqRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReqRequest) ProtoMessage() {}

func (x *PingReqRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gossip_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReqRequest.ProtoReflect.Descriptor instead.
func (*PingReqRequest) Descriptor() ([]byte, []int) {
	return file_gossip_proto_rawDescGZIP(), []int{2}
}

func (x *PingReqRequest) GetFromId() string {
	if x != nil {
		return x.FromId
	}
	return ""
}

func (x *PingReqRequest) GetTargetAddr() string {
	if x != nil {
		return x.TargetAddr
	}
	return ""
}

func (x *PingReqRequest) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type PingReqReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	TsMs          int64                  `protobuf:"varint,2,opt,name=ts_ms,json=tsMs,proto3" json:"ts_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingReqReply) Reset() {
	*x = PingReqReply{}
	mi := &file_gossip_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingReqReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReqReply) ProtoMessage() {}

func (x *PingReqReply) ProtoReflect() protoreflect.Message {
	mi := &file_gossip_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReqReply.ProtoReflect.Descriptor instead.
func (*PingReqReply) Descriptor() ([]byte, []int) {
	return file_gossip_proto_rawDescGZIP(), []int{3}
}

func (x *PingReqReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *PingReqReply) GetTsMs() int64 {
	if x != nil {
		return x.TsMs
	}
	return 0
}

type PeerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"` // host:port gRPC
	IsSeed        bool                   `protobuf:"varint,3,opt,name=is_seed,json=isSeed,proto3" json:"is_seed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerInfo) Reset() {
	*x = PeerInfo{}
	mi := &file_gossip_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerInfo) ProtoMessage() {}

func (x *PeerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gossip_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerInfo.ProtoReflect.Descriptor instead.
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return file_gossip_proto_rawDescGZIP(), []int{4}
}

func (x *PeerInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *PeerInfo) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *PeerInfo) GetIsSeed() bool {
	if x != nil {
		return x.IsSeed
	}
	return false
}

type Stats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	CpuPct        float64                `protobuf:"fixed64,2,opt,name=cpu_pct,json=cpuPct,proto3" json:"cpu_pct,omitempty"`
	MemPct        float64                `protobuf:"fixed64,3,opt,name=mem_pct,json=memPct,proto3" json:"mem_pct,omitempty"`
	GpuPct        float64                `protobuf:"fixed64,4,opt,name=gpu_pct,json=gpuPct,proto3" json:"gpu_pct,omitempty"` // -1 se GPU assente
	TsMs          int64                  `protobuf:"varint,5,opt,name=ts_ms,json=tsMs,proto3" json:"ts_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stats) Reset() {
	*x = Stats{}
	mi := &file_gossip_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_gossip_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_gossip_proto_rawDescGZIP(), []int{5}
}

func (x *Stats) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Stats) GetCpuPct() float64 {
	if x != nil {
		return x.CpuPct
	}
	return 0
}

func (x *Stats) GetMemPct() float64 {
	if x != nil {
		return x.MemPct
	}
	return 0
}

func (x *Stats) GetGpuPct() float64 {
	if x != nil {
		return x.GpuPct
	}
	return 0
}

func (x *Stats) GetTsMs() int64 {
	if x != nil {
		return x.TsMs
	}
	return 0
}

type JoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Incarnation   uint64                 `protobuf:"varint,3,opt,name=incarnation,proto3" json:"incarnation,omitempty"`
	MyStats       *Stats                 `protobuf:"bytes,4,opt,name=my_stats,json=myStats,proto3" json:"my_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_gossip_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gossip_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_gossip_proto_rawDescGZIP(), []int{6}
}

func (x *JoinRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *JoinRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *JoinRequest) GetIncarnation() uint64 {
	if x != nil {
		return x.Incarnation
	}
	return 0
}

func (x *JoinRequest) GetMyStats() *Stats {
	if x != nil {
		return x.MyStats
	}
	return nil
}

type JoinReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Peers         []*PeerInfo            `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`                                      // campione iniziale
	StatsSnapshot []*Stats               `protobuf:"bytes,2,rep,name=stats_snapshot,json=statsSnapshot,proto3" json:"stats_snapshot,omitempty"` // alcune stats fresche
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinReply) Reset() {
	*x = JoinReply{}
	mi := &file_gossip_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinReply) ProtoMessage() {}

func (x *JoinReply) ProtoReflect() protoreflect.Message {
	mi := &file_gossip_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinReply.ProtoReflect.Descriptor instead.
func (*JoinReply) Descriptor() ([]byte, []int) {
	return file_gossip_proto_rawDescGZIP(), []int{7}
}

func (x *JoinReply) GetPeers() []*PeerInfo {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *JoinReply) GetStatsSnapshot() []*Stats {
	if x != nil {
		return x.StatsSnapshot
	}
	return nil
}

var File_gossip_proto protoreflect.FileDescriptor

const file_gossip_proto_rawDesc = "" +
	"\n" +
	"\fgossip.proto\x12\x06gossip\"8\n" +
	"\vPingRequest\x12\x17\n" +
	"\afrom_id\x18\x01 \x01(\tR\x06fromId\x12\x10\n" +
	"\x03seq\x18\x02 \x01(\x04R\x03seq\"0\n" +
	"\tPingReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x13\n" +
	"\x05ts_ms\x18\x02 \x01(\x03R\x04tsMs\"\\\n" +
	"\x0ePingReqRequest\x12\x17\n" +
	"\afrom_id\x18\x01 \x01(\tR\x06fromId\x12\x1f\n" +
	"\vtarget_addr\x18\x02 \x01(\tR\n" +
	"targetAddr\x12\x10\n" +
	"\x03seq\x18\x03 \x01(\x04R\x03seq\"3\n" +
	"\fPingReqReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x13\n" +
	"\x05ts_ms\x18\x02 \x01(\x03R\x04tsMs\"P\n" +
	"\bPeerInfo\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12\x17\n" +
	"\ais_seed\x18\x03 \x01(\bR\x06isSeed\"\x80\x01\n" +
	"\x05Stats\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x17\n" +
	"\acpu_pct\x18\x02 \x01(\x01R\x06cpuPct\x12\x17\n" +
	"\amem_pct\x18\x03 \x01(\x01R\x06memPct\x12\x17\n" +
	"\agpu_pct\x18\x04 \x01(\x01R\x06gpuPct\x12\x13\n" +
	"\x05ts_ms\x18\x05 \x01(\x03R\x04tsMs\"\x86\x01\n" +
	"\vJoinRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12 \n" +
	"\vincarnation\x18\x03 \x01(\x04R\vincarnation\x12(\n" +
	"\bmy_stats\x18\x04 \x01(\v2\r.gossip.StatsR\amyStats\"i\n" +
	"\tJoinReply\x12&\n" +
	"\x05peers\x18\x01 \x03(\v2\x10.gossip.PeerInfoR\x05peers\x124\n" +
	"\x0estats_snapshot\x18\x02 \x03(\v2\r.gossip.StatsR\rstatsSnapshot2\xa1\x01\n" +
	"\x06Gossip\x12.\n" +
	"\x04Join\x12\x13.gossip.JoinRequest\x1a\x11.gossip.JoinReply\x12.\n" +
	"\x04Ping\x12\x13.gossip.PingRequest\x1a\x11.gossip.PingReply\x127\n" +
	"\aPingReq\x12\x16.gossip.PingReqRequest\x1a\x14.gossip.PingReqReplyB%Z#GossipSystemUtilization/proto;protob\x06proto3"

var (
	file_gossip_proto_rawDescOnce sync.Once
	file_gossip_proto_rawDescData []byte
)

func file_gossip_proto_rawDescGZIP() []byte {
	file_gossip_proto_rawDescOnce.Do(func() {
		file_gossip_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gossip_proto_rawDesc), len(file_gossip_proto_rawDesc)))
	})
	return file_gossip_proto_rawDescData
}

var file_gossip_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_gossip_proto_goTypes = []any{
	(*PingRequest)(nil),    // 0: gossip.PingRequest
	(*PingReply)(nil),      // 1: gossip.PingReply
	(*PingReqRequest)(nil), // 2: gossip.PingReqRequest
	(*PingReqReply)(nil),   // 3: gossip.PingReqReply
	(*PeerInfo)(nil),       // 4: gossip.PeerInfo
	(*Stats)(nil),          // 5: gossip.Stats
	(*JoinRequest)(nil),    // 6: gossip.JoinRequest
	(*JoinReply)(nil),      // 7: gossip.JoinReply
}
var file_gossip_proto_depIdxs = []int32{
	5, // 0: gossip.JoinRequest.my_stats:type_name -> gossip.Stats
	4, // 1: gossip.JoinReply.peers:type_name -> gossip.PeerInfo
	5, // 2: gossip.JoinReply.stats_snapshot:type_name -> gossip.Stats
	6, // 3: gossip.Gossip.Join:input_type -> gossip.JoinRequest
	0, // 4: gossip.Gossip.Ping:input_type -> gossip.PingRequest
	2, // 5: gossip.Gossip.PingReq:input_type -> gossip.PingReqRequest
	7, // 6: gossip.Gossip.Join:output_type -> gossip.JoinReply
	1, // 7: gossip.Gossip.Ping:output_type -> gossip.PingReply
	3, // 8: gossip.Gossip.PingReq:output_type -> gossip.PingReqReply
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gossip_proto_init() }
func file_gossip_proto_init() {
	if File_gossip_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gossip_proto_rawDesc), len(file_gossip_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gossip_proto_goTypes,
		DependencyIndexes: file_gossip_proto_depIdxs,
		MessageInfos:      file_gossip_proto_msgTypes,
	}.Build()
	File_gossip_proto = out.File
	file_gossip_proto_goTypes = nil
	file_gossip_proto_depIdxs = nil
}
